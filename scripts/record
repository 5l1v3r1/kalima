#!/bin/bash
#DESCRIPTION: Enable logging and recording (persistently)

# # ensure running as root, if not, sudo and execute script again
# if [ "$(id -u)" != "0" ]; then
#   exec sudo "$0" "$@"
# fi

SCRIPTPATH=$(dirname $(readlink -f $0))

echoError() {
  RED='\033[0;31m'
  NC='\033[0m' # No Color
  printf "${RED}[!]${NC} $1\n"
}
echoInfo() {
  YELLOW='\033[0;33m'
  NC='\033[0m' # No Color
  printf "${YELLOW}[i]${NC} $1\n"
}
echoAction() {
  GREEN='\033[0;32m'
  NC='\033[0m' # No Color
  printf "${GREEN}[+]${NC} $1\n"
}
echoSection() {
  CYAN='\033[0;36m'
  NC='\033[0m' # No Color
  printf "${CYAN}$1${NC}\n"
}

function usage () {                                      
    echo -e "Kalima Recorder - Do it like the spies do!

  Usage: $0 -e | -d [--help]

  	-e 		Enable logging on new terminals
  	-d 		Disable logging on new terminals

  Note:
  * While logging new terminal prompts will have a \033[0;31m\u229A\033[0m leftmost
  * All logs are stored under \"$(cat ~/.config/kalima/project_home)/1_evidence/\"
  * Close your terminals and open them again via the desktop shortcut, or 
  * Use \"/usr/local/bin/kalima terminal\" from the command line.
  
  Replay:
  * Use \"asciinema play terminal_{date}_{time}.cast\" to replay as a movie
  * Use \"asciinema cat terminal_{date}_{time}.cast\" to view as a file

"
exit 1
}


while getopts "ed" options; do              

                                               
  case "${options}" in                         
    e)                                         
      echoAction "Enabling logging for new terminal sessions..."
      echo "true" > ~/.config/kalima/record_session               
      ;;
    d )                                        
      echoAction "Disabling logging for new terminal sessions..."
      echo "false" > ~/.config/kalima/record_session
      ;;
    : )                                         
      echoError "-${OPTARG} requires an argument."
      usage
                        
      ;;
    \? )                                       
      usage
                     
      ;;
  esac
done


[ $OPTIND -eq 1 ] && usage
